/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

const documents = {
    "\n  query getClassById($id: String!) {\n    getClassById(id: $id) {\n      id\n      name\n      avatar\n      students {\n        id\n        lastName\n        firstName\n        avatar\n      }\n    }\n  }\n": types.GetClassByIdDocument,
    "\n  query getAttandanceByClass($id: String!) {\n    getAttendanceByClass(id: $id) {\n      id\n      content\n      learn_date\n      is_learn_date\n    }\n  }\n": types.GetAttandanceByClassDocument,
    "\n  mutation updateAttendences(\n    $updateAttandancesInput: UpdateAttendancesInput!\n    $class_id: String!\n  ) {\n    updateAttendances(\n      updateAttendancesInput: $updateAttandancesInput\n      class_id: $class_id\n    )\n  }\n": types.UpdateAttendencesDocument,
    "\n  mutation Register($registerInput: RegisterInput!) {\n    register(registerInput: $registerInput) {\n      email\n      token_version\n    }\n  }\n": types.RegisterDocument,
    "\n  mutation login($loginInput: LoginInput!) {\n    login(loginInput: $loginInput) {\n      accessToken\n      refreshToken\n      user {\n        email\n        firstName\n        lastName\n        phoneNumber\n        address\n        avatar\n        _id\n      }\n    }\n  }\n": types.LoginDocument,
    "\n  query refreshToken {\n    refreshToken {\n      accessToken\n      refreshToken\n      user {\n        firstName\n        lastName\n        email\n        address\n        phoneNumber\n        avatar\n        id\n        role\n      }\n    }\n  }\n": types.RefreshTokenDocument,
    "\n  mutation logout {\n    logout\n  }\n": types.LogoutDocument,
    "\n  query getMyClass {\n    getMyClass {\n      id\n      name\n      avatar\n      code\n      from_date\n      end_date\n      scoreFactor\n    }\n  }\n": types.GetMyClassDocument,
    "\n  query getClassById($id: String!) {\n    getClassById(id: $id) {\n      name\n      avatar\n      students {\n        id\n        lastName\n        firstName\n        email\n      }\n    }\n  }\n": types.GetClassByIdDocument,
    "\n  mutation createMyClass($createMyClass: CreateMyClassInput!) {\n    createMyClass(createMyClass: $createMyClass) {\n      name\n      avatar\n      code\n      scoreFactor\n      createdAt\n      updatedAt\n    }\n  }\n": types.CreateMyClassDocument,
    "\n  mutation updateMyClass(\n    $UpdateMyClassInput: UpdateMyClassInput!\n    $id: String!\n  ) {\n    updateMyClass(updateMyClass: $UpdateMyClassInput, id: $id) {\n      name\n      scoreFactor\n      from_date\n      end_date\n    }\n  }\n": types.UpdateMyClassDocument,
    "\n  mutation assignStudentToClass(\n    $assignStudentToClass: AssignUserToClassInput!\n  ) {\n    assignStudentToClass(assignStudentToClassInput: $assignStudentToClass) {\n      id\n      students {\n        email\n        lastName\n        firstName\n        id\n      }\n    }\n  }\n": types.AssignStudentToClassDocument,
    "\n  mutation deleteMyClass($id: String!) {\n    deleteMyClass(id: $id)\n  }\n": types.DeleteMyClassDocument,
    "\n  query getAllUsers {\n    getAllUsers {\n      id\n      email\n      firstName\n      lastName\n    }\n  }\n": types.GetAllUsersDocument,
    "\n  query getInfoMe {\n    me {\n      id\n      firstName\n      lastName\n    }\n  }\n": types.GetInfoMeDocument,
    "\n  query getTag {\n    getTag {\n      id\n      _id\n      name\n      color\n    }\n  }\n": types.GetTagDocument,
    "\n  mutation createTag($createTagInput: CreateTagInput!) {\n    createTag(createTagInput: $createTagInput) {\n      name\n      color\n    }\n  }\n": types.CreateTagDocument,
    "\n  mutation deleteTag($id: String!) {\n    deleteTag(deleteMyInput: $id)\n  }\n": types.DeleteTagDocument,
    "\nmutation updateprofile($updateProfileInput: UpdateProfileInput!) {\n    updateProfile(updateProfileInput: $updateProfileInput) {\n      firstName\n      lastName\n      phoneNumber\n      address\n      avatar\n    }\n  }": types.UpdateprofileDocument,
};

export function graphql(source: "\n  query getClassById($id: String!) {\n    getClassById(id: $id) {\n      id\n      name\n      avatar\n      students {\n        id\n        lastName\n        firstName\n        avatar\n      }\n    }\n  }\n"): (typeof documents)["\n  query getClassById($id: String!) {\n    getClassById(id: $id) {\n      id\n      name\n      avatar\n      students {\n        id\n        lastName\n        firstName\n        avatar\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query getAttandanceByClass($id: String!) {\n    getAttendanceByClass(id: $id) {\n      id\n      content\n      learn_date\n      is_learn_date\n    }\n  }\n"): (typeof documents)["\n  query getAttandanceByClass($id: String!) {\n    getAttendanceByClass(id: $id) {\n      id\n      content\n      learn_date\n      is_learn_date\n    }\n  }\n"];
export function graphql(source: "\n  mutation updateAttendences(\n    $updateAttandancesInput: UpdateAttendancesInput!\n    $class_id: String!\n  ) {\n    updateAttendances(\n      updateAttendancesInput: $updateAttandancesInput\n      class_id: $class_id\n    )\n  }\n"): (typeof documents)["\n  mutation updateAttendences(\n    $updateAttandancesInput: UpdateAttendancesInput!\n    $class_id: String!\n  ) {\n    updateAttendances(\n      updateAttendancesInput: $updateAttandancesInput\n      class_id: $class_id\n    )\n  }\n"];
export function graphql(source: "\n  mutation Register($registerInput: RegisterInput!) {\n    register(registerInput: $registerInput) {\n      email\n      token_version\n    }\n  }\n"): (typeof documents)["\n  mutation Register($registerInput: RegisterInput!) {\n    register(registerInput: $registerInput) {\n      email\n      token_version\n    }\n  }\n"];
export function graphql(source: "\n  mutation login($loginInput: LoginInput!) {\n    login(loginInput: $loginInput) {\n      accessToken\n      refreshToken\n      user {\n        email\n        firstName\n        lastName\n        phoneNumber\n        address\n        avatar\n        _id\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation login($loginInput: LoginInput!) {\n    login(loginInput: $loginInput) {\n      accessToken\n      refreshToken\n      user {\n        email\n        firstName\n        lastName\n        phoneNumber\n        address\n        avatar\n        _id\n      }\n    }\n  }\n"];
export function graphql(source: "\n  query refreshToken {\n    refreshToken {\n      accessToken\n      refreshToken\n      user {\n        firstName\n        lastName\n        email\n        address\n        phoneNumber\n        avatar\n        id\n        role\n      }\n    }\n  }\n"): (typeof documents)["\n  query refreshToken {\n    refreshToken {\n      accessToken\n      refreshToken\n      user {\n        firstName\n        lastName\n        email\n        address\n        phoneNumber\n        avatar\n        id\n        role\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation logout {\n    logout\n  }\n"): (typeof documents)["\n  mutation logout {\n    logout\n  }\n"];
export function graphql(source: "\n  query getMyClass {\n    getMyClass {\n      id\n      name\n      avatar\n      code\n      from_date\n      end_date\n      scoreFactor\n    }\n  }\n"): (typeof documents)["\n  query getMyClass {\n    getMyClass {\n      id\n      name\n      avatar\n      code\n      from_date\n      end_date\n      scoreFactor\n    }\n  }\n"];
export function graphql(source: "\n  query getClassById($id: String!) {\n    getClassById(id: $id) {\n      name\n      avatar\n      students {\n        id\n        lastName\n        firstName\n        email\n      }\n    }\n  }\n"): (typeof documents)["\n  query getClassById($id: String!) {\n    getClassById(id: $id) {\n      name\n      avatar\n      students {\n        id\n        lastName\n        firstName\n        email\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation createMyClass($createMyClass: CreateMyClassInput!) {\n    createMyClass(createMyClass: $createMyClass) {\n      name\n      avatar\n      code\n      scoreFactor\n      createdAt\n      updatedAt\n    }\n  }\n"): (typeof documents)["\n  mutation createMyClass($createMyClass: CreateMyClassInput!) {\n    createMyClass(createMyClass: $createMyClass) {\n      name\n      avatar\n      code\n      scoreFactor\n      createdAt\n      updatedAt\n    }\n  }\n"];
export function graphql(source: "\n  mutation updateMyClass(\n    $UpdateMyClassInput: UpdateMyClassInput!\n    $id: String!\n  ) {\n    updateMyClass(updateMyClass: $UpdateMyClassInput, id: $id) {\n      name\n      scoreFactor\n      from_date\n      end_date\n    }\n  }\n"): (typeof documents)["\n  mutation updateMyClass(\n    $UpdateMyClassInput: UpdateMyClassInput!\n    $id: String!\n  ) {\n    updateMyClass(updateMyClass: $UpdateMyClassInput, id: $id) {\n      name\n      scoreFactor\n      from_date\n      end_date\n    }\n  }\n"];
export function graphql(source: "\n  mutation assignStudentToClass(\n    $assignStudentToClass: AssignUserToClassInput!\n  ) {\n    assignStudentToClass(assignStudentToClassInput: $assignStudentToClass) {\n      id\n      students {\n        email\n        lastName\n        firstName\n        id\n      }\n    }\n  }\n"): (typeof documents)["\n  mutation assignStudentToClass(\n    $assignStudentToClass: AssignUserToClassInput!\n  ) {\n    assignStudentToClass(assignStudentToClassInput: $assignStudentToClass) {\n      id\n      students {\n        email\n        lastName\n        firstName\n        id\n      }\n    }\n  }\n"];
export function graphql(source: "\n  mutation deleteMyClass($id: String!) {\n    deleteMyClass(id: $id)\n  }\n"): (typeof documents)["\n  mutation deleteMyClass($id: String!) {\n    deleteMyClass(id: $id)\n  }\n"];
export function graphql(source: "\n  query getAllUsers {\n    getAllUsers {\n      id\n      email\n      firstName\n      lastName\n    }\n  }\n"): (typeof documents)["\n  query getAllUsers {\n    getAllUsers {\n      id\n      email\n      firstName\n      lastName\n    }\n  }\n"];
export function graphql(source: "\n  query getInfoMe {\n    me {\n      id\n      firstName\n      lastName\n    }\n  }\n"): (typeof documents)["\n  query getInfoMe {\n    me {\n      id\n      firstName\n      lastName\n    }\n  }\n"];
export function graphql(source: "\n  query getTag {\n    getTag {\n      id\n      _id\n      name\n      color\n    }\n  }\n"): (typeof documents)["\n  query getTag {\n    getTag {\n      id\n      _id\n      name\n      color\n    }\n  }\n"];
export function graphql(source: "\n  mutation createTag($createTagInput: CreateTagInput!) {\n    createTag(createTagInput: $createTagInput) {\n      name\n      color\n    }\n  }\n"): (typeof documents)["\n  mutation createTag($createTagInput: CreateTagInput!) {\n    createTag(createTagInput: $createTagInput) {\n      name\n      color\n    }\n  }\n"];
export function graphql(source: "\n  mutation deleteTag($id: String!) {\n    deleteTag(deleteMyInput: $id)\n  }\n"): (typeof documents)["\n  mutation deleteTag($id: String!) {\n    deleteTag(deleteMyInput: $id)\n  }\n"];
export function graphql(source: "\nmutation updateprofile($updateProfileInput: UpdateProfileInput!) {\n    updateProfile(updateProfileInput: $updateProfileInput) {\n      firstName\n      lastName\n      phoneNumber\n      address\n      avatar\n    }\n  }"): (typeof documents)["\nmutation updateprofile($updateProfileInput: UpdateProfileInput!) {\n    updateProfile(updateProfileInput: $updateProfileInput) {\n      firstName\n      lastName\n      phoneNumber\n      address\n      avatar\n    }\n  }"];

export function graphql(source: string): unknown;
export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;